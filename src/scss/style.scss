@use "sass:math";
// Connecting mixins ===========================================================================================================================================================================================================================================================================
@import "base/mixins.scss";

// Connecting fonts ===========================================================================================================================================================================================================================================================================
//&display=swap - add when connecting via plugin
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700;800&family=Sora:wght@700;800&display=swap');

// Connect if there are local font files
//@import "fonts/fonts.scss";

// Connect icon fonts =========================================== ================================================= ================================================= ================================================= ================================================= =========================
// Include if there is an icon font file
//@import "fonts/icons.scss";

// Default font ==============================================================================================================================================================================================================================================================================
$fontFamily: "Inter", sans-serif;
$fontSize: rem(20); // where 14(px) is the default font size from the layout

// Variables
$mainColor: #05060F; // Default font color

:root {
  // Primary colors
  --first-color: #05060F;
  --second-color: #7657FF;
  --third-color: #F5C418;
  --fourth-colour: #1E1F27;
  --whiteColor: #fff;

  // Font and typography
  --body-font: 'Inter', sans-serif;
  --title-font: 'Sora', sans-serif;

  --display-text: 4rem; //64
  --h2-font-size: 3.5rem; //56
  --h3-font-size: 2.25rem; //36
  --h4-font-size: 2rem; //32
  --h5-font-size: 1.5rem; //24
  --normal-font-size: 1.25rem; //20
}

// SETTINGS ============================================= ================================================= ================================================= ================================================= ================================================= ========================================
// Minimum page width
$minWidth: 320;
// Canvas (layout) width
$maxWidth: 1440;
// Bounding Container Width (0 = No Bounding)
$maxWidthContainer: 1208;
// General container padding
// (30 = 15px left and right, 0 = no padding)
$containerPadding: 30;

// The width of the first breakpoint
$containerWidth: $maxWidthContainer + $containerPadding;

// Break points
$pc: em($containerWidth); // ПК, ноутбуки, некоторые планшеты в горизонтальном положении
$tablet: em(991.98); // Планшеты, некоторые телефоны в горизонтальном положении
$mobile: em(767.98); // Телефоны L
$mobileSmall: em(479.98); // Телефоны S

// Adaptive type:
// 1 = responsive (container has no breakpoints),
// 2 = by break points (container changes its width by break points)
$responsiveType: 1;

// Zeroing and general parameters ============================================================================================================================================================================================== =============================================================================================== ===============================================================================================
@import "base/null.scss";

body {
  // Scroll locked
  .lock & {
    overflow: hidden;
    touch-action: none;
  }
  // Site loaded
  .loaded & {
  }
}

// Wrapper ============================================================================================================================================================================================================================================================================================================================================================================================================================================
.wrapper {
  min-height: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  // snuggling footer
  > main {
    flex: 1 1 auto;
  }
  // Fix for sliders
  > * {
    min-width: 0;
  }
}

// Bounding container ======================================================================================================================================================================================================================

/*
(i) Styles will be applied to
to all classes containing *__container
For example header__container, main__container etc.
*/
@if ($responsiveType==1) {
  // Responsive
  [class*="__container"] {
    @if ($maxWidthContainer>0) {
      max-width: rem($maxWidthContainer);
      box-sizing: content-box;
      margin: 0 auto;
    }
    @if ($containerPadding>0) {
      padding: 0 rem(calc($containerPadding / 2));
    }
  }
} @else {
  // By break points
  [class*="__container"] {
    margin: 0 auto;
    @if ($maxWidthContainer>0) {
      max-width: rem($maxWidthContainer);
      box-sizing: content-box;
    } @else {
      @if ($containerPadding>0) {
        padding: 0 rem(calc($containerPadding / 2));
      }
    }
    @media (max-width: $pc) {
      max-width: rem(970);
    }
    @media (max-width: $tablet) {
      max-width: rem(750);
    }
    @media (max-width: $mobile) {
      max-width: none;
      @if ($containerPadding>0 and $maxWidthContainer>0) {
        padding: 0 rem(calc($containerPadding / 2));
      }
    }
  }
}


// Connecting styles of common project elements
@import "common.scss";

// Connecting individual block styles
@import "header.scss";
@import "footer.scss";

// Connecting individual page styles
@import "home.scss";
@import "error.scss";
@import "base/aos.scss";

.page {
  padding-top: rem(110);
}